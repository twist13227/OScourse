Отчёт по практическому заданию "Сетевой стек".
Подготовили: студент 327 группы Егоров Илья и студент 328 группы Семеняк Георгий.

Выполнено:
1)Реализована поддержка PCI и подключена сетевая карта E1000
2)Подключена карта с помощью параметров запуска QEMU и использования tap устройств (изначально планировалось через multi socket посредством программы isp-socket, но выбран аналогичный вариант через tap-устройства)
3)Реализован вывод информации о PCI
4)Написан драйвер для сетевой карты
5)Реализована поддержка ответа на ARP запросы. Алгоритм тестирования: подключение tap устройства (sudo itask/init.sh) (далее - везде), make qemu (далее - везде), выполнение команды монитора eth_recv (цикл приёма сообщений). Любое обращение на адрес 192.160.144.2(например, ping), проверка результатов посредством сетевого анализатора (например, Wireshark)
6)Обеспечена поддержка ICMP запросов (ping). Можно протестировать вместе с ARP запросами с помощью команды 192.160.144.2 и просмотра того, что Echo Request и Echo Reply корректны посредством Wireshark.
7)Реализованы IP и Ethernet (на уровне отправки/приёма пакетов) для обеспечения работы UDP.
8)Реализованы приём и отправка UDP пакетов. Проверка отправки: udp_send. Проверить то, что пакеты отправлены можно в Wireshark.
Проверка приёма:запустить eth_recv для создания цикла приёма сообщений, скомпилировать и выполнить программу itask/udp_test.c, посмотреть в мониторе, что полученный пакет совпадает с отправленным (например, HELLO).
9)Написан скрипт для тестирования работоспособности системы.
Примечания:
1)kernel panic at kern/init.c:163: assertion failed: false - специально, чтобы сразу попадать в монитор
2)JOS располагается по IP адресу 192.160.144.2, а Linux - 192.160.144.1.
3)MAC адрес сетевой карты задан через параметры qemu
4)В целом, все утилиты тестируются за один запуск. Результат такого примера: itask/result_of_test.pcapng (файл для Wireshark)

